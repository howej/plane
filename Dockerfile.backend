FROM python:3.12-alpine AS backend

# set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1 

WORKDIR /code

RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories

RUN apk add --no-cache \
    "libpq" \
    "libxslt" \
    "nodejs-current" \
    "xmlsec"

COPY ./apiserver/requirements.txt ./
COPY ./apiserver/requirements ./requirements
RUN apk add --no-cache libffi-dev
RUN apk add --no-cache --virtual .build-deps \
    "bash~=5.2" \
    "g++" \
    "gcc" \
    "cargo" \
    "git" \
    "make" \
    "postgresql-dev" \
    "libc-dev" \
    "linux-headers" \
    && \
    pip install -r requirements.txt --compile --no-cache-dir \
    && \
    apk del .build-deps


# Add in Django deps and generate Django's static files
COPY ./apiserver/manage.py manage.py
COPY ./apiserver/plane plane/
COPY ./apiserver/templates templates/
COPY ./apiserver/package.json package.json

RUN apk --no-cache add "bash~=5.2"
COPY ./apiserver/bin ./bin/

RUN mkdir -p /code/plane/logs
RUN chmod +x ./bin/*
RUN chmod -R 777 /code

# Expose container port and run entry point script
EXPOSE 9000

# CMD ["/bin/bash", "-c", "./bin/docker-entrypoint-api.sh && ./bin/docker-entrypoint-worker.sh && ./bin/docker-entrypoint-beat.sh && ./bin/docker-entrypoint-migrator.sh"]